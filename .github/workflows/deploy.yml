name: Deploy para Produ√ß√£o

on:
  push:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3

      - name: Configurar Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Instalar pnpm
        run: npm install -g pnpm

      - name: Cache do pnpm
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Instalar depend√™ncias
        run: pnpm install

      - name: Build do projeto
        run: pnpm build

      - name: Copiar arquivos para o servidor via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "."
          target: "~/leapcert/LeapCert-Front"

      - name: Rodar Docker Compose no servidor
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/leapcert/LeapCert-Front
            docker-compose down
            docker-compose up -d --build

      - name: Enviar notifica√ß√£o Discord
        run: |
          curl -H "Content-Type: application/json" \
          -X POST \
          -d '{"content":"üöÄ Nova vers√£o do *LeapCert-Front* foi publicada em produ√ß√£o com sucesso!"}' \
          ${{ secrets.DISCORD_WEBHOOK }}
